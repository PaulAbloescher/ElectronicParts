<Window x:Class="ElectronicParts.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ElectronicParts.Views"
        xmlns:vm="clr-namespace:ElectronicParts.ViewModels;assembly=ElectronicParts.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        d:DataContext="{Binding Source={d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=False}}"
        Title="Electronic Parts" MinWidth="500" MinHeight="400" WindowState="Maximized" MouseMove="Window_MouseMove">

    <!-- Resources -->
    <Window.Resources>

        <!-- ListViewStyle -->
        <Style TargetType="ListView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <!-- NodeInformationTemplate -->
        <DataTemplate x:Key="NodeInformationTemplate">
            <local:NodeInformation HorizontalAlignment="Center"/>
        </DataTemplate>

        <CollectionViewSource Source="{Binding ViewModel.Nodes}" x:Key="Nodes"/>
        <CollectionViewSource Source="{Binding ViewModel.Connections}" x:Key="Connections"/>
        <CompositeCollection x:Key="DisplayItems">
            <CollectionContainer Collection="{Binding  Source={StaticResource Nodes}}"/>
            <CollectionContainer Collection="{Binding  Source={StaticResource Connections}}"/>
        </CompositeCollection>

    </Window.Resources>

    <!-- Shortcuts -->
    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding ViewModel.SaveCommand}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding ViewModel.LoadCommand}"/>
    </Window.InputBindings>

    <DockPanel>
        <!-- Menu -->
        <Menu Background="WhiteSmoke" BorderThickness="0,0,0,1" BorderBrush="DarkGray" DockPanel.Dock="Top" FontSize="14" >
            <MenuItem Header="_File">
                <MenuItem Header="_Save" Command="{Binding ViewModel.SaveCommand}" InputGestureText="Ctrl+S" />
                <MenuItem Header="_Open" Command="{Binding ViewModel.LoadCommand}" InputGestureText="Ctrl+O" />
                <Separator/>
                <MenuItem Header="_Reload Assemblies" Command="{Binding ViewModel.ReloadAssembliesCommand}"/>
                <MenuItem Header="_Add new Assembly" Name="addAssembly" Click="AddAssembly_Click"/>
                <MenuItem Header="_Open Assembly Folder" Name="openAssemblyFolder" Click="OpenAssemblyFolder_Click"/>
                <Separator/>
                <MenuItem Header="_Preferences" Name="preferences" Click="Preferences_Click"/>
                <MenuItem Header="_Exit" Command="{Binding ViewModel.ExitCommand}" />
            </MenuItem>
        </Menu>

        <ListView ItemsSource="{Binding ViewModel.AvailableNodes}" SelectedItem="{Binding ViewModel.SelectedNodeInformation}" DockPanel.Dock="Left" Width="200" ItemTemplate="{StaticResource NodeInformationTemplate}" SelectionChanged="ListView_SelectionChanged" Name="AvilableNodes" >
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <DockPanel Margin="0 1 0 0" Background="LightGray" DockPanel.Dock="Right">
            <Border Margin="0" DockPanel.Dock="Top" BorderThickness="1 0 0 1" BorderBrush="DarkGray">
                <DockPanel Background="WhiteSmoke" Height="40px" LastChildFill="False">
                    <DockPanel.Resources>
                        <Style x:Name="ImageStyle" TargetType="{x:Type Image}">
                            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
                        </Style>
                        <Style x:Name="RoundedButton" TargetType="{x:Type Button}">
                            <Setter Property="Margin" Value="10,0,0,0"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="border" CornerRadius="20" Margin="5" Padding="0" BorderThickness="0" Background="LightGray">
                                            <ContentPresenter x:Name="button" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="DarkGray"/>
                                            </Trigger>
                                            <Trigger  Property="Button.IsPressed" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="LightBlue"/>
                                            </Trigger>
                                            <Trigger  Property="Button.IsEnabled" Value="False">
                                                <Setter TargetName="border" Property="Opacity" Value="0.3"/>
                                                <Setter TargetName="button" Property="Opacity" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DockPanel.Resources>

                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ExecutionStartLoopCommand}">
                        <Image Source="/Resources/play.png"/>
                    </Button>
                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ExecutionStepCommand}">
                        <Image Source="/Resources/step.png"/>
                    </Button>
                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ExecutionStopLoopCommand}">
                        <Image Source="/Resources/pause.png"/>
                    </Button>
                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ExecutionStopLoopAndResetCommand}">
                        <Image Source="/Resources/stop.png"/>
                    </Button>
                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ResetAllConnectionsCommand}">
                        <Image Source="/Resources/reset.png"/>
                    </Button>
                </DockPanel>
            </Border>



            <!-- Nodes Display -->
            <ItemsControl DockPanel.Dock="Right" ItemsSource="{StaticResource DisplayItems}">
                <ItemsControl.Resources>
                    <DataTemplate DataType="{x:Type vm:NodeViewModel}">
                        <local:Node MouseLeftButtonDown="Node_MouseLeftButtonDown" MouseLeftButtonUp="Node_MouseLeftButtonUp" >
                            <local:Node.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete" Command="{Binding ViewModel.DeleteNodeCommand}" CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </local:Node.ContextMenu>
                        </local:Node>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:ConnectorViewModel}">
                        <local:Connection>
                            <local:Connection.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Delete" Command="{Binding ViewModel.DeleteConnectionCommand}" CommandParameter="{Binding}"/>
                            </ContextMenu>
                            </local:Connection.ContextMenu>
                        </local:Connection>
                    </DataTemplate>
                </ItemsControl.Resources>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left"
                            Value="{Binding Left}" />
                        <Setter Property="Canvas.Top"
                            Value="{Binding Top}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True" Loaded="ItemsCanvas_Loaded" x:Name="ItemsCanvas" Background="LightGray" Validation.ErrorTemplate="{x:Null}">
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DockPanel>
    </DockPanel>
</Window>
