<Window x:Class="ElectronicParts.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ElectronicParts.Views"
        xmlns:vm="clr-namespace:ElectronicParts.ViewModels;assembly=ElectronicParts.ViewModel"
        xmlns:converters="clr-namespace:ElectronicParts.Converter"
        xmlns:shared="clr-namespace:Shared;assembly=Shared"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        x:Name="mainW"
        mc:Ignorable="d"
        d:DataContext="{Binding Source={d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=False}}"
        Title="Electronic Parts" MinWidth="1000" MinHeight="400" WindowState="Maximized" MouseMove="Window_MouseMove" d:DesignWidth="1028.2">

    <!-- Resources -->
    <Window.Resources>

        <!-- ListViewStyle -->
        <Style TargetType="ListView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <!-- NodeInformationTemplate -->
        <DataTemplate x:Key="NodeInformationTemplate">
            <local:NodeInformation HorizontalAlignment="Center"/>
        </DataTemplate>

        <!-- Display Items-->
        <CollectionViewSource Source="{Binding ViewModel.Nodes}" x:Key="Nodes"/>
        <CollectionViewSource Source="{Binding ViewModel.Connections}" x:Key="Connections"/>
        <CompositeCollection x:Key="DisplayItems">
            <CollectionContainer Collection="{Binding  Source={StaticResource Nodes}}"/>
            <CollectionContainer Collection="{Binding  Source={StaticResource Connections}}"/>
        </CompositeCollection>

    </Window.Resources>

    <!-- Shortcuts -->
    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding ViewModel.SaveCommand}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding ViewModel.LoadCommand}"/>
    </Window.InputBindings>

    <DockPanel>
        <!-- Menu -->
        <Menu Background="WhiteSmoke" BorderThickness="0,0,0,1" BorderBrush="DarkGray" DockPanel.Dock="Top" FontSize="14" >
            <MenuItem Header="_File">
                <MenuItem Header="_Save" Command="{Binding ViewModel.SaveCommand}" InputGestureText="Ctrl+S" />
                <MenuItem Header="_Open" Command="{Binding ViewModel.LoadCommand}" InputGestureText="Ctrl+O" />
                <Separator/>
                <MenuItem Header="_Reload Assemblies" Command="{Binding ViewModel.ReloadAssembliesCommand}"/>
                <MenuItem Header="_Add new Assembly" Name="addAssembly" Click="AddAssembly_Click"/>
                <MenuItem Header="_Open Assembly Folder" Name="openAssemblyFolder" Click="OpenAssemblyFolder_Click"/>
                <Separator/>
                <MenuItem Header="_Preferences" Name="preferences" Click="Preferences_Click"/>
                <MenuItem Header="_Exit" Command="{Binding ViewModel.ExitCommand}" />
            </MenuItem>
        </Menu>
        <DockPanel LastChildFill="True">
            <Border DockPanel.Dock="Top" BorderBrush="DarkGray" BorderThickness="0 0 0 1.4">
                <ComboBox Height="41" Margin="0 0 1 0" BorderThickness="0" ItemsSource="{Binding ViewModel.NodeCategories}" SelectedItem="{Binding ViewModel.SelectedCategory, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <ComboBox.Effect>
                            <DropShadowEffect Opacity="0.4" ShadowDepth="1" BlurRadius="1" Direction="270" />
                    </ComboBox.Effect>
                    <ComboBox.ItemTemplate>
                        <ItemContainerTemplate>
                            <TextBlock Text="{Binding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="20"/>
                        </ItemContainerTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Border>
                <ListView DockPanel.Dock="Top"
                      Height="Auto"
                      BorderThickness="0 0 1 0"
                      ItemsSource="{Binding ViewModel.AvailableNodes}"
                      SelectedItem="{Binding ViewModel.SelectedNodeInformation}"
                      Width="200" ItemTemplate="{StaticResource NodeInformationTemplate}"
                      Name="AvilableNodes"
                      PreviewMouseLeftButtonDown="ListViewItem_MouseLeftButtonDown">
                    <ListView.Style>
                        <Style TargetType="ListView">
                            <Style.Triggers>
                                <DataTrigger Value="false">
                                    <DataTrigger.Binding>
                                        <Binding Path="ViewModel.CanAddNode"/>
                                    </DataTrigger.Binding>
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Style.Setters>
                                <Setter Property="Background" Value="WhiteSmoke"/>
                            </Style.Setters>
                        </Style>
                    </ListView.Style>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Style.Triggers>
                                <DataTrigger Value="False">
                                    <DataTrigger.Binding>
                                        <Binding Path="ViewModel.CanAddNode" ElementName="mainW"/>
                                    </DataTrigger.Binding>
                                    <Setter Property="Opacity" Value="0.4"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Style.Setters>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Opacity" Value="1"/>
                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_MouseLeftButtonDown"/>
                            </Style.Setters>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
        </DockPanel>
        

        <!-- Controls and ItemsDisplay -->
        <DockPanel Margin="-1 1 0 0" Background="LightGray" DockPanel.Dock="Right">
            <Border Margin="0" DockPanel.Dock="Top" BorderThickness="1 0 0 1" BorderBrush="DarkGray">
                <!-- Controls -->
                <DockPanel Background="WhiteSmoke" Height="40px" LastChildFill="False">
                    <DockPanel.Effect>
                        <DropShadowEffect Opacity="0.4" ShadowDepth="5" BlurRadius="2" Direction="270" />
                    </DockPanel.Effect>
                    <DockPanel.Resources>
                        <Style x:Name="ImageStyle" TargetType="{x:Type Image}">
                            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
                        </Style>
                        <Style x:Name="RoundedButton" TargetType="{x:Type Button}">
                            <Setter Property="Margin" Value="10,0,0,0"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="border" CornerRadius="20" Margin="5" Padding="0" BorderThickness="0" Background="LightGray">
                                            <ContentPresenter x:Name="button" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="DarkGray"/>
                                            </Trigger>
                                            <Trigger  Property="Button.IsPressed" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="LightBlue"/>
                                            </Trigger>
                                            <Trigger  Property="Button.IsEnabled" Value="False">
                                                <Setter TargetName="border" Property="Opacity" Value="0.3"/>
                                                <Setter TargetName="button" Property="Opacity" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DockPanel.Resources>

                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ExecutionStartLoopCommand}">
                        <Image Source="/Resources/play.png"/>
                    </Button>
                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ExecutionStepCommand}">
                        <Image Source="/Resources/step.png"/>
                    </Button>
                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ExecutionStopLoopCommand}">
                        <Image Source="/Resources/pause.png"/>
                    </Button>
                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ExecutionStopLoopAndResetCommand}">
                        <Image Source="/Resources/stop.png"/>
                    </Button>
                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ResetAllConnectionsCommand}">
                        <Image Source="/Resources/reset.png"/>
                    </Button>
                    <Button DockPanel.Dock="Left" Command="{Binding ViewModel.ClearAllNodesCommand}">
                        <Image Source="/Resources/clear.png"/>
                    </Button>
                    <Border BorderBrush="DarkGray" BorderThickness="1px" Margin="2px" Padding="3px">
                        <DockPanel DockPanel.Dock="Left" HorizontalAlignment="Left"  MaxWidth="300px" Margin="10 0 0 0">
                            <TextBlock DockPanel.Dock="Right" VerticalAlignment="Center" Height="20px" TextAlignment="Center" Text="FPS"></TextBlock>
                            <TextBlock Text="{Binding ViewModel.FramesPerSecond}" TextAlignment="Center" Margin="10 0 2 0"  DockPanel.Dock="Right" Width="20px" Height="20px" TextWrapping="NoWrap"/>
                            <Slider x:Name="slider" 
                                DockPanel.Dock="Left" 
                                MinWidth="200px"
                                Maximum="100" 
                                Minimum="1" 
                                VerticalAlignment="Center"
                                TickFrequency="5"
                                TickPlacement="BottomRight"
                                IsSnapToTickEnabled="True"
                                Value="{Binding ViewModel.FramesPerSecond, UpdateSourceTrigger=PropertyChanged}"></Slider>
                        </DockPanel>
                    </Border>
                    <StackPanel Margin="5 0 0 0" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="{Binding ViewModel.MilisecondsPerLoop}"></TextBlock>
                        <TextBlock Margin="5 0 0 0">ms/cycle</TextBlock>
                    </StackPanel>
                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Height="auto" Margin="0 0 10 0">
                        <TextBlock VerticalAlignment="Center" Text="GridSize: "/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding ViewModel.GridSize, UpdateSourceTrigger=PropertyChanged}"/>
                        <StackPanel Margin="8 0 18 0" Orientation="Vertical" VerticalAlignment="Center">
                            <Button Style="{x:Null}" Height="15" Width="25" Command="{Binding ViewModel.IncreaseGridSize}">
                                <TextBlock Text="+" Margin="0 0 0 2.5" FontSize="15" LineHeight="15" VerticalAlignment="Center" TextAlignment="Center"/>
                            </Button>
                            <Button Style="{x:Null}" Height="15" Width="25" Command="{Binding ViewModel.DecreaseGridSize}">
                                <TextBlock Text="-" Margin="0 0 0 2.5" FontSize="15" LineHeight="15" VerticalAlignment="Center" TextAlignment="Center"/>
                            </Button>
                        </StackPanel>
                        <TextBlock VerticalAlignment="Center">Snap:</TextBlock>
                        <CheckBox VerticalAlignment="Center" IsChecked="{Binding ViewModel.GridSnappingEnabled}"/>
                    </StackPanel>
                </DockPanel>
            </Border>

            <!-- Nodes Display -->
            <ScrollViewer Name="boardScroller" ScrollChanged="BoardScroller_ScrollChanged" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ItemsControl HorizontalAlignment="Stretch" BorderBrush="DarkGray" BorderThickness="1 0 0 0" DockPanel.Dock="Bottom" ItemsSource="{StaticResource DisplayItems}" Background="White"  >
                    <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type vm:NodeViewModel}">
                            <local:Node MouseLeftButtonDown="Node_MouseLeftButtonDown" MouseLeftButtonUp="Node_MouseLeftButtonUp" >
                                <local:Node.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding}"/>
                                        <MenuItem Header="Increase Width" Command="{Binding IncreaseWidthCommand}"/>
                                        <MenuItem Header="Decrease Width" Command="{Binding DecreaseWidthCommand}"/>
                                    </ContextMenu>
                                </local:Node.ContextMenu>
                            </local:Node>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:ConnectorViewModel}">
                            <local:Connection>
                                <local:Connection.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </local:Connection.ContextMenu>
                            </local:Connection>
                        </DataTemplate>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left"
                            Value="{Binding Left}" />
                            <Setter Property="Canvas.Top"
                            Value="{Binding Top}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas HorizontalAlignment="Center" IsItemsHost="True" Loaded="ItemsCanvas_Loaded" x:Name="ItemsCanvas" Width="{Binding ViewModel.BoardWidth}" Height="{Binding ViewModel.BoardHeight}" >
                                <Canvas.Background>
                                    <DrawingBrush TileMode="Tile"
                                     ViewportUnits="Absolute">
                                        <DrawingBrush.Viewport>
                                            <Binding Path="ViewModel.GridSize">
                                                <Binding.Converter>
                                                    <converters:GridSizeConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </DrawingBrush.Viewport>
                                        <DrawingBrush.Drawing>
                                            <GeometryDrawing>
                                                <GeometryDrawing.Geometry>
                                                    <RectangleGeometry Rect="0,0,10,10"></RectangleGeometry>
                                                </GeometryDrawing.Geometry>
                                                <GeometryDrawing.Pen>
                                                    <Pen Brush="Black" Thickness="0.1"/>
                                                </GeometryDrawing.Pen>
                                            </GeometryDrawing>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Canvas.Background>
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
        </DockPanel>
    </DockPanel>
</Window>
